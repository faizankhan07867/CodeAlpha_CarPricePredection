#CodeAlpha_CarPricePredection.

# ðŸ“Œ Task 3: Car Price Prediction with Machine Learning
# Internship: CodeAlpha - Data Science

# Step 1: Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import LabelEncoder

# Step 2: Load dataset (download from Kaggle link in PDF)
df = pd.read_csv("CarPrice.csv")  # adjust name as per dataset

print("First 5 rows:")
print(df.head())

# Step 3: Data Cleaning
print("\nDataset Info:")
print(df.info())

# Handle categorical variables
categorical_cols = df.select_dtypes(include=["object"]).columns
le = LabelEncoder()
for col in categorical_cols:
    df[col] = le.fit_transform(df[col])

print("\nData after encoding:")
print(df.head())

# Step 4: Feature Selection
X = df.drop("Price", axis=1)   # change column name to match dataset
y = df["Price"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Evaluation
y_pred = model.predict(X_test)

print("\nRÂ² Score:", r2_score(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))

# Step 7: Visualization
plt.figure(figsize=(6,6))
plt.scatter(y_test, y_pred, alpha=0.6)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted Car Prices")
plt.show()
